<% layout('./layouts/dash_boil.ejs') %>

<style>
  /* Add your CSS styles here */

  /* Main card container */
  .dashboard-content {
    padding: 20px;
  }

  /* Student info */
  .dashboard-table__student-info {
    display: flex;
    align-items: center;
  }

  .dashboard-table__student-avatar img {
    width: 40px;
    height: 40px;
    border-radius: 50%;
  }

  .dashboard-table__title {
    margin-left: 10px;
  }

  /* Table styles */
  .table {
    width: 100%;
    border-collapse: collapse;
  }

  .table th,
  .table td {
    border: 1px solid #ddd;
    padding: 8px;
    position: relative;
    cursor: pointer;
  }

  .table th {
    background-color: #f2f2f2;
  }

  /* Export button */
  #export-csv {
    background-color: #0071dc;
    color: #fff;
    border: none;
    border-radius: 5px;
    padding: 8px 15px;
    cursor: pointer;
    margin-bottom: 10px;
    width: 100%;
  }

  #export-csv:hover {
    background-color: #0e62b1;
  }

  /* Hide details row by default */
  .details-row {
    display: none;
  }

  /* Style details container */
  .details-container {
    background-color: #f9f9f9;
    padding: 10px;
    border-radius: 5px;
    margin-top: 10px;
  }

  /* Media query for mobile */
  @media screen and (max-width: 768px) {
    .expand-button {
      display: none; /* Hide on mobile */
    }

    .action {
      display: none; /* Hide on mobile */
    }

    #export-csv {
      margin-bottom: 10px;
    }

    .details-row {
      display: table-row; /* Show details directly */
    }

    .dashboard-table__student-avatar img {
      width: 30px;
      height: 30px;
    }

    .dashboard-table__title {
      margin-left: 5px;
    }
  }

  /* CSS for arrow buttons */
  th {
    position: relative;
    cursor: pointer;
  }

  th .arrow {
    position: absolute;
    top: 50%;
    right: 10px;
    transform: translateY(-50%);
  }

  .arrow.up {
    border: solid black;
    border-width: 0 3px 3px 0;
    display: inline-block;
    padding: 3px;
  }

  .arrow.down {
    border: solid black;
    border-width: 3px 3px 0 0;
    display: inline-block;
    padding: 3px;
  }
</style>

<!-- Dashboard Content Start -->
<div class="dashboard-content">
  <div class="container">
    <h4 class="dashboard-title">My Students</h4>
    <button id="export-csv">Export CSV</button>
    <!-- Export CSV button -->
    <div class="dashboard-students">
      <div class="dashboard-table table-responsive">
        <table class="table" id="students-table">
          <thead>
            <tr>
              <th class="student">Student<span class="arrow"></span></th>
              <th class="name">Name<span class="arrow"></span></th>
              <th class="mobile">Mobile<span class="arrow"></span></th>
              <th class="year">Year<span class="arrow"></span></th>
              <th class="coursename">Course Name<span class="arrow"></span></th>
              <th class="email">Email<span class="arrow"></span></th>
            </tr>
          </thead>
          <tbody>
            <% for(let user of allStudents) {%>
            <tr>
              <td>
                <div class="dashboard-table__student-info">
                  <div class="dashboard-table__student-avatar">
                    <img
                      src="https://cdn-icons-png.flaticon.com/512/2919/2919600.png"
                      alt="Avatar"
                    />
                  </div>
                  <div class="dashboard-table__title">
                    <span class="name"><%= user.name %></span>
                    <span class="date"
                      ><%= user.createdAt.toLocaleDateString() %></span
                    >
                  </div>
                </div>
              </td>
              <td class="details" data-label="Name"><%= user.name %></td>
              <td class="details" data-label="Mobile"><%= user.mobile %></td>
              <td class="details" data-label="Year"><%= user.year %></td>
              <td class="details" data-label="Course Name">
                <%= user.coursename %>
              </td>
              <td class="details" data-label="Email"><%= user.email %></td>
            </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
<!-- Dashboard Content End -->

<script>
  // Export data to CSV
  document.getElementById("export-csv").addEventListener("click", function () {
    const table = document.getElementById("students-table");
    const rows = Array.from(table.querySelectorAll("tr"));

    // Extract data from table
    const data = rows.map((row) =>
      Array.from(row.querySelectorAll(".details")).map((td) =>
        td.textContent.trim()
      )
    );

    // Insert column names at the beginning
    const columnNames = ["Name", "Mobile", "Year", "Course Name", "Email"];
    data.unshift(columnNames);

    // Remove empty rows
    const cleanedData = data.filter((row) => row.some((cell) => cell !== ""));

    // Generate CSV content
    const csvContent =
      "data:text/csv;charset=utf-8," +
      cleanedData.map((row) => row.join(",")).join("\n");

    // Create a link element to trigger the download
    const encodedUri = encodeURI(csvContent);
    const link = document.createElement("a");
    link.setAttribute("href", encodedUri);
    link.setAttribute("download", "students.csv");
    document.body.appendChild(link);

    // Trigger the download
    link.click();
  });

  // Sorting functionality
  const headers = document.querySelectorAll("th");
  let sortColumn = null;
  let sortAscending = true;

  headers.forEach((header, index) => {
    header.addEventListener("click", function () {
      const columnIndex = index;
      const isCurrentColumn = sortColumn === columnIndex;

      // Toggle sorting direction if it's the same column
      if (isCurrentColumn) {
        sortAscending = !sortAscending;
      } else {
        sortColumn = columnIndex;
        sortAscending = true;
      }

      // Remove sorting indicators from all headers
      headers.forEach((header) => {
        header.classList.remove("asc", "desc");
        header.querySelector(".arrow").classList.remove("up", "down");
      });

      // Apply sorting indicator to the clicked header
      header.classList.add(sortAscending ? "asc" : "desc");
      header
        .querySelector(".arrow")
        .classList.add(sortAscending ? "up" : "down");

      // Sort the table data
      sortTable(columnIndex, sortAscending);
    });
  });

  function sortTable(columnIndex, ascending) {
    const table = document.getElementById("students-table");
    const tbody = table.querySelector("tbody");
    const rows = Array.from(tbody.querySelectorAll("tr"));

    rows.sort((a, b) => {
      const aValue = a.querySelectorAll("td")[columnIndex].textContent.trim();
      const bValue = b.querySelectorAll("td")[columnIndex].textContent.trim();

      if (!isNaN(aValue) && !isNaN(bValue)) {
        return ascending ? aValue - bValue : bValue - aValue;
      } else {
        return ascending
          ? aValue.localeCompare(bValue)
          : bValue.localeCompare(aValue);
      }
    });

    while (tbody.firstChild) {
      tbody.removeChild(tbody.firstChild);
    }

    rows.forEach((row) => {
      tbody.appendChild(row);
    });
  }
</script>
